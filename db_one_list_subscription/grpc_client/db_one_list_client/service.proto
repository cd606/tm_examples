syntax = "proto3";
package db_one_list_subscription;

service Main {
    rpc Transaction(TITransaction) returns (TITransactionResponse);
    rpc Subscription(GSInput) returns (stream GSOutput);
}
message DBData {
    int32 amount = 1;
    double stat = 2;
}
message DBDelta {
    repeated string deletes = 1;
    map<string,DBData> inserts_updates = 2;
}
message TIKey {
}
enum RequestDecision {
    Success = 0;
    FailurePrecondition = 1;
    FailurePermission = 2;
    FailureConsistency = 3;
};
message InsertAction {
    TIKey key = 1;
    map<string,DBData> data = 2;
}
message UpdateAction {
    TIKey key = 1;
    int64 oldVersionSlice = 2;
    uint32 oldDataSummary = 3;
    DBDelta dataDelta = 4;
}
message DeleteAction {
    TIKey key = 1;
    int64 oldVersionSlice = 2;
    uint32 oldDataSummary = 3;
}
message TITransactionResponse {
    int64 globalVersion = 1;
    RequestDecision requestDecision = 2;
}
enum TransactionSubtypes {
    InsertActionType = 0;
    UpdateActionType = 1;
    DeleteActionType = 2;
}
message TITransactionVariants {
    oneof Action {
        InsertAction insertAction = 1;
        UpdateAction updateAction = 2;
        DeleteAction deleteAction = 3;
    }
}
message TITransaction {
    TITransactionVariants input = 1;
}
message GSKey {
}
message Subscription {
    repeated GSKey keys = 1;
}
message Unsubscription {
    string originalSubscriptionID = 1;
}
message ListSubscriptions {
}
message OneSubscriptionInfo {
    string id = 1;
    repeated GSKey keys = 2;
}
message SubscriptionInfo {
    repeated OneSubscriptionInfo subscriptions = 1;
}
message UnsubscribeAll {
}
message SnapshotRequest {
    repeated GSKey keys = 1;
}

message OneFullUpdateItem {
    GSKey groupID = 1;
    int64 version = 2;
    map<string,DBData> data = 3;
}
message OneDeltaUpdateItem {
    GSKey key = 1;
    int64 versionDelta = 2;
    DBDelta dataDelta = 3;
}
message OneUpdateItem {
    oneof TheUpdate {
        OneFullUpdateItem fullUpdate = 1;
        OneDeltaUpdateItem deltaUpdate = 2;
    }
}
message SubscriptionUpdate {
    int64 globalVersion = 1;
    repeated OneUpdateItem update = 2;
}
message GSInputVariants {
    oneof Data {
        Subscription subscription = 1;
        Unsubscription unsubscription = 2;
        ListSubscriptions listSubscriptions = 3;
        UnsubscribeAll unsubscribeAll = 4;
        SnapshotRequest snapshotRequest = 5;
    }
}
message GSInput {
    GSInputVariants input = 1;
}
message GSOutputVariants {
    oneof Data {
        Subscription subscription = 1;
        Unsubscription unsubscription = 2;
        SubscriptionUpdate subscriptionUpdate = 3;
        SubscriptionInfo subscriptionInfo = 4;
        UnsubscribeAll unsubscribeAll = 5;
    }
}
message GSOutput {
    GSOutputVariants output = 1;
}